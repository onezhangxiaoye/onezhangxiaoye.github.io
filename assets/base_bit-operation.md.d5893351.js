import{_ as s,o as a,c as l,a as n}from"./app.b90595f9.js";const A=JSON.parse('{"title":"位运算的使用","description":"","frontmatter":{},"headers":[{"level":2,"title":"一元运算符","slug":"一元运算符","link":"#一元运算符","children":[{"level":3,"title":"~ 按位非运算符","slug":"按位非运算符","link":"#按位非运算符","children":[]}]},{"level":2,"title":"位移运算符","slug":"位移运算符","link":"#位移运算符","children":[{"level":3,"title":"<< 按位左移运算符","slug":"按位左移运算符","link":"#按位左移运算符","children":[]},{"level":3,"title":">> 按位右移运算符","slug":"按位右移运算符","link":"#按位右移运算符","children":[]},{"level":3,"title":">>> 按位无符号右移运算符","slug":"按位无符号右移运算符","link":"#按位无符号右移运算符","children":[]}]},{"level":2,"title":"二进制位运算符","slug":"二进制位运算符","link":"#二进制位运算符","children":[{"level":3,"title":"运算的真值","slug":"运算的真值","link":"#运算的真值","children":[]},{"level":3,"title":"& 按位与（AND）","slug":"按位与-and","link":"#按位与-and","children":[]},{"level":3,"title":"| 按位或（OR）","slug":"按位或-or","link":"#按位或-or","children":[]},{"level":3,"title":"^ 按位异或（XOR）","slug":"按位异或-xor","link":"#按位异或-xor","children":[]}]},{"level":2,"title":"基于位运算的权限设计","slug":"基于位运算的权限设计","link":"#基于位运算的权限设计","children":[]}],"relativePath":"base/bit-operation.md","lastUpdated":1716447218000}'),e={name:"base/bit-operation.md"},o=n(`<h1 id="位运算的使用" tabindex="-1">位运算的使用 <a class="header-anchor" href="#位运算的使用" aria-hidden="true">#</a></h1><h2 id="一元运算符" tabindex="-1">一元运算符 <a class="header-anchor" href="#一元运算符" aria-hidden="true">#</a></h2><h3 id="按位非运算符" tabindex="-1">~ 按位非运算符 <a class="header-anchor" href="#按位非运算符" aria-hidden="true">#</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT" target="_blank" rel="noreferrer">按位非运算符</a>（~）将操作数的位反转。如同其他位运算符一样，它将操作数转化为 32 位的有符号整型</p><blockquote><p><strong><code>~num === num*-1 -1</code></strong></p></blockquote><h2 id="位移运算符" tabindex="-1">位移运算符 <a class="header-anchor" href="#位移运算符" aria-hidden="true">#</a></h2><h3 id="按位左移运算符" tabindex="-1">&lt;&lt; 按位左移运算符 <a class="header-anchor" href="#按位左移运算符" aria-hidden="true">#</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Left_shift" target="_blank" rel="noreferrer">左移操作符</a> (&lt;&lt;) 将第一个操作数向左移动指定位数，左边超出的位数将会被清除，右边将会补零</p><blockquote><p><strong><code>x &lt;&lt; y === x*2**y</code></strong></p></blockquote><h3 id="按位右移运算符" tabindex="-1">&gt;&gt; 按位右移运算符 <a class="header-anchor" href="#按位右移运算符" aria-hidden="true">#</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Right_shift" target="_blank" rel="noreferrer">右移操作符</a> (&gt;&gt;) 是将一个操作数按指定移动的位数向右移动，右边移出位被丢弃，左边移出的空位补符号位（最左边那位）</p><blockquote><p><strong><code>x &gt;&gt;&gt; 1 === Math.floor(x / 2)</code></strong></p></blockquote><h3 id="按位无符号右移运算符" tabindex="-1">&gt;&gt;&gt; 按位无符号右移运算符 <a class="header-anchor" href="#按位无符号右移运算符" aria-hidden="true">#</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift" target="_blank" rel="noreferrer">无符号右移运算符</a>（&gt;&gt;&gt;）（零填充右移）将左操作数计算为无符号数，并将该数字的二进制表示形式移位为右操作数指定的位数，取模 32。向右移动的多余位将被丢弃，零位从左移入。其符号位变为 0，因此结果始终为非负数。与其他按位运算符不同，零填充右移返回一个无符号 32 位整数</p><blockquote><p><strong><code>若 x &gt;= 0 ; x &gt;&gt;&gt; 1 === Math.floor(x / 2)</code></strong></p></blockquote><p>上面这里这个用法在 <code>vue3</code> 源码中有使用到 <a href="https://github.com/vuejs/core/blob/main/packages/runtime-core/src/scheduler.ts#L71" target="_blank" rel="noreferrer">链接</a></p><h2 id="二进制位运算符" tabindex="-1">二进制位运算符 <a class="header-anchor" href="#二进制位运算符" aria-hidden="true">#</a></h2><h3 id="运算的真值" tabindex="-1">运算的真值 <a class="header-anchor" href="#运算的真值" aria-hidden="true">#</a></h3><table><thead><tr><th>a</th><th>b</th><th>a &amp; b</th><th>a | b</th><th>a ^ b</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td></tr></tbody></table><h3 id="按位与-and" tabindex="-1">&amp; 按位与（AND） <a class="header-anchor" href="#按位与-and" aria-hidden="true">#</a></h3><blockquote><p>若 <strong><code>(a &amp; 1) === 0</code></strong> 则 <code>a</code> 为 <strong>偶数</strong> ，否则为 <strong>奇数</strong></p></blockquote><h3 id="按位或-or" tabindex="-1">| 按位或（OR） <a class="header-anchor" href="#按位或-or" aria-hidden="true">#</a></h3><p>按位或（OR）</p><h3 id="按位异或-xor" tabindex="-1">^ 按位异或（XOR） <a class="header-anchor" href="#按位异或-xor" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">// 交换 a , b 的值</span></span>
<span class="line"><span style="color:#A6ACCD;">let a = 3</span></span>
<span class="line"><span style="color:#A6ACCD;">let b = 5</span></span>
<span class="line"><span style="color:#A6ACCD;">a ^= b</span></span>
<span class="line"><span style="color:#A6ACCD;">b ^= a</span></span>
<span class="line"><span style="color:#A6ACCD;">a ^= b</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// a = 5 ; b = 3</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="基于位运算的权限设计" tabindex="-1">基于位运算的权限设计 <a class="header-anchor" href="#基于位运算的权限设计" aria-hidden="true">#</a></h2><ul><li><p>基础权限设计</p><ul><li>读：A = 0000001 = (1 &lt;&lt; 0) = 1</li><li>写：B = 0000010 = (1 &lt;&lt; 1) = 2</li><li>删：C = 0000100 = (1 &lt;&lt; 2) = 4</li><li>增：D = 0001000 = (1 &lt;&lt; 3) = 8</li><li>移：E = 0010000 = (1 &lt;&lt; 4) = 16</li></ul></li><li><p>单角色权限，利用 <code>二进制位运算符</code> 的 <code>|</code> 来为角色添加多个权限</p><ul><li>Role1 = A | B = 0000011</li><li>Role2 = A | B | C = 0000111</li><li>Role3 = D | E = 0011000</li></ul></li><li><p>用户权限，利用 <code>二进制位运算符</code> 的 <code>|</code> 来为用户合并角色权限</p><ul><li>user1 = Role1 &amp; Role3 = 0011011</li></ul></li><li><p>角色权限移除，利用 <code>二进制位运算符</code> 的 <code>^</code> 来移除角色权限</p><ul><li>Role2 = Role2 &amp; C = 0000011 (从 Role2 中移除权限 C)</li></ul></li><li><p>用户权限检查，利用 <code>二进制位运算符</code> 的 <code>&amp;</code> 来判断用户是否存在某个权限</p><ul><li>!!(user1 &amp; C) = false (判断用户 user1 是否有 删 权限)</li><li>!!(user1 &amp; A) = true (判断用户 user1 是否有 读 权限)</li></ul></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Read </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Write </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Delete </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Add </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Move </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 为角色配置权限</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> Role1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Read </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Write</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> Role2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Add </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Move</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 为用户配置角色</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> User1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Role1 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Role2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">User1 是否有 Delete 权限</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">(User1 </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Delete))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">User1 是否有 Read 权限</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">(User1 </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Read))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">User1 是否有 Write 权限</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">(User1 </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Write))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">移除 Role1 的 Write 权限</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 移除 Role1 的 Write 权限</span></span>
<span class="line"><span style="color:#A6ACCD;">Role1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Role1 </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> Write</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 重新计算 User1 的权限</span></span>
<span class="line"><span style="color:#A6ACCD;">User1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Role1 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Role2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">User1 是否有 Write 权限</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">(User1 </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Write))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/** 输出:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * User1 是否有 Delete 权限 false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * User1 是否有 Read 权限 true</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * User1 是否有 Write 权限 true</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 移除 Role1 的 Write 权限</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * User1 是否有 Write 权限 false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"></span></code></pre></div>`,28),t=[o];function p(r,c,i,d,C,D){return a(),l("div",null,t)}const h=s(e,[["render",p]]);export{A as __pageData,h as default};
