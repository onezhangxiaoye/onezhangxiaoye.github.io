import{_ as a,c as e,o as s,a1 as n,a2 as o}from"./chunks/framework.DSzkhk7e.js";const m=JSON.parse('{"title":"浏览器缓存","description":"","frontmatter":{},"headers":[],"relativePath":"browser/browser-catch.md","filePath":"browser/browser-catch.md","lastUpdated":1716447218000}'),t={name:"browser/browser-catch.md"},r=n(`<h1 id="浏览器缓存" tabindex="-1">浏览器缓存 <a class="header-anchor" href="#浏览器缓存" aria-label="Permalink to &quot;浏览器缓存&quot;">​</a></h1><p>当用户访问网站时，为了降低服务器压力，加快二次访问时的加载速度，在首次加载完成后，浏览器会对网页资源进行缓存。</p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://segmentfault.com/a/1190000017962411" target="_blank" rel="noreferrer">1.实践这一次，彻底搞懂浏览器缓存机制</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching" target="_blank" rel="noreferrer">2.HTTP 缓存-MDN</a></p><p><a href="https://github.com/shfshanyue/Daily-Question/issues/113" target="_blank" rel="noreferrer">3.如果 http 响应头中 ETag 值改变了，是否意味着文件内容一定已经更改 #113</a></p><h2 id="名词解释" tabindex="-1">名词解释 <a class="header-anchor" href="#名词解释" aria-label="Permalink to &quot;名词解释&quot;">​</a></h2><ul><li><code>memory cache</code>：缓存至内存，浏览器关闭后下次就需要重新加载</li><li><code>disk cache</code>：缓存至磁盘，浏览器关闭再打开缓存也是生效的</li><li><code>Cache-Control: max-age=30</code> 缓存过期时间 <code>no-cache</code>/<code>max-age=&lt;seconds&gt;</code> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noreferrer">详细介绍</a></li><li><code>Date: Mon, 26 Apr 2021 16:49:50 GMT</code> 当前资源服务器响应的时间点，转换为中国时区时间 加上8小时就行</li><li><code>ETag: &quot;6084338b-c7&quot;</code> 当前文件内容标记，文件修改后 ETag 会被修改，文件不修改但是 <code>Last-Modified</code> 修改也会导致 <code>ETag</code> 改变，具体看参考文章3</li><li><code>Last-Modified: Sat, 24 Apr 2021 15:04:43 GMT</code> 文件的最后一次修改时间</li><li><code>Server: nginx/1.18.0</code> 服务器类型</li></ul><h2 id="nginx-简单配置" tabindex="-1">Nginx 简单配置 <a class="header-anchor" href="#nginx-简单配置" aria-label="Permalink to &quot;Nginx 简单配置&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen 8089;</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>      add_header  Cache-Control max-age=100,immutable;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      root D:/soft/qq/Desktop/0820/HTML/nginx;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="缓存判断逻辑流程图" tabindex="-1">缓存判断逻辑流程图 <a class="header-anchor" href="#缓存判断逻辑流程图" aria-label="Permalink to &quot;缓存判断逻辑流程图&quot;">​</a></h2><p><img src="`+o+'" alt=""></p>',12),l=[r];function c(i,p,d,h,_,b){return s(),e("div",null,l)}const u=a(t,[["render",c]]);export{m as __pageData,u as default};
