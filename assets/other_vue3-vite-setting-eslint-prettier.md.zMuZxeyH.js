import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.DSzkhk7e.js";const g=JSON.parse('{"title":"vue3+vite配置eslint&prettier","description":"","frontmatter":{},"headers":[],"relativePath":"other/vue3-vite-setting-eslint-prettier.md","filePath":"other/vue3-vite-setting-eslint-prettier.md","lastUpdated":1716447218000}'),e={name:"other/vue3-vite-setting-eslint-prettier.md"},l=n(`<h1 id="vue3-vite配置eslint-prettier" tabindex="-1">vue3+vite配置eslint&amp;prettier <a class="header-anchor" href="#vue3-vite配置eslint-prettier" aria-label="Permalink to &quot;vue3+vite配置eslint&amp;prettier&quot;">​</a></h1><h2 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h2><ol><li><a href="https://juejin.cn/post/6915378605459521543" target="_blank" rel="noreferrer">vite+vue3+ts+eslint+prettier 掘金</a></li><li><a href="https://prettier.io/docs/en/options.html" target="_blank" rel="noreferrer">prettier官网-options</a></li><li><a href="https://ts.xcatliu.com/engineering/lint.html" target="_blank" rel="noreferrer">ts 代码检查</a></li><li><a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noreferrer">eslint-plugin-vue Available rules</a></li><li><a href="https://stackoverflow.com/questions/66597732/eslint-vue-3-parsing-error-expected-eslint" target="_blank" rel="noreferrer">坑-Eslint Vue 3 Parsing error: &#39;&gt;&#39; expected.eslint</a></li><li><a href="https://eslint.org/docs/rules/" target="_blank" rel="noreferrer">eslint-规则</a></li><li><a href="https://prettier.io/docs/en/install.html#eslint-and-other-linters" target="_blank" rel="noreferrer">解决eslint和prettier的规则冲突</a></li></ol><blockquote><p>2019 年 1 月，TypeScirpt 官方决定全面采用 ESLint 作为代码检查的工具，并创建了一个新项目 typescript-eslint，提供了 TypeScript 文件的解析器 @typescript-eslint/parser 和相关的配置选项 @typescript-eslint/eslint-plugin 等。 <a href="https://ts.xcatliu.com/engineering/lint.html" target="_blank" rel="noreferrer">摘抄自</a></p></blockquote><h2 id="创建一个-vite-vue3-ts-项目" tabindex="-1">创建一个 vite + vue3 + ts 项目 <a class="header-anchor" href="#创建一个-vite-vue3-ts-项目" aria-label="Permalink to &quot;创建一个 vite + vue3 + ts 项目&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm init @vitejs/app vite-eslint</span></span></code></pre></div><h2 id="安装-eslint-依赖" tabindex="-1">安装 eslint 依赖 <a class="header-anchor" href="#安装-eslint-依赖" aria-label="Permalink to &quot;安装 eslint 依赖&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm i typescript eslint eslint-plugin-vue typescript-eslint/parser @typescript-eslint/eslint-plugin -D</span></span></code></pre></div><h2 id="eslint-相关配置说明" tabindex="-1">eslint 相关配置说明 <a class="header-anchor" href="#eslint-相关配置说明" aria-label="Permalink to &quot;eslint 相关配置说明&quot;">​</a></h2><h3 id="环境配置-env" tabindex="-1">环境配置 env <a class="header-anchor" href="#环境配置-env" aria-label="Permalink to &quot;环境配置 env&quot;">​</a></h3><p><strong>一个环境定义了一组预定义的全局变量。可用的环境包括</strong></p><ul><li>一个环境定义了一组预定义的全局变量。可用的环境包括</li><li><code>browser</code> - 浏览器环境中的全局变量。</li><li><code>node</code> - Node.js 全局变量和 Node.js 作用域。</li><li><code>commonjs</code> - CommonJS 全局变量和 CommonJS 作用域 (用于 Browserify/WebPack 打包的只在浏览器中运行的代码)。</li><li><code>shared-node-browser</code> - Node.js 和 Browser 通用全局变量。</li><li><code>es6</code> - 启用除了 modules 以外的所有 ECMAScript 6 特性（该选项会自动设置 ecmaVersion 解析器选项为 6）。</li><li><code>worker</code> - Web Workers 全局变量。</li><li><code>amd</code> - 将 require() 和 define() 定义为像 amd 一样的全局变量。</li><li><code>mocha</code> - 添加所有的 Mocha 测试全局变量。</li><li><code>jasmine</code> - 添加所有的 Jasmine 版本 1.3 和 2.0 的测试全局变量。</li><li><code>jest</code> - Jest 全局变量。</li><li><code>phantomjs</code> - PhantomJS 全局变量。</li><li><code>protractor</code> - Protractor 全局变量。</li><li><code>qunit</code> - QUnit 全局变量。</li><li><code>jquery</code> - jQuery 全局变量。</li><li><code>prototypejs</code> - Prototype.js 全局变量。</li><li><code>shelljs</code> - ShellJS 全局变量。</li><li><code>meteor</code> - Meteor 全局变量。</li><li><code>mongo</code> - MongoDB 全局变量。</li><li><code>applescript</code> - AppleScript 全局变量。</li><li><code>nashorn</code> - Java 8 Nashorn 全局变量。</li></ul><h3 id="插件相关-plugins" tabindex="-1"><a href="https://cn.eslint.org/docs/user-guide/configuring#configuring-plugins" target="_blank" rel="noreferrer">插件相关 plugins</a> <a class="header-anchor" href="#插件相关-plugins" aria-label="Permalink to &quot;[插件相关 plugins](https://cn.eslint.org/docs/user-guide/configuring#configuring-plugins)&quot;">​</a></h3><ul><li><code>ESLint</code> 支持使用第三方插件。在使用插件之前，你必须使用 <code>npm</code> 安装它。</li><li>在配置文件里配置插件时，可以使用 plugins 关键字来存放插件名字的列表。插件名称可以省略 <code>eslint-plugin-</code> 前缀</li><li><code>ESLint</code> 将加载与用户通过从项目 Node 交互解释器运行 (<code>&#39;eslint-plugin-pluginname&#39;</code>) 获得的相同的插件</li></ul><h3 id="规则配置-rules" tabindex="-1"><a href="https://cn.eslint.org/docs/user-guide/configuring#using-configuration-files" target="_blank" rel="noreferrer">规则配置 rules</a> <a class="header-anchor" href="#规则配置-rules" aria-label="Permalink to &quot;[规则配置 rules](https://cn.eslint.org/docs/user-guide/configuring#using-configuration-files)&quot;">​</a></h3><ul><li>配置定义在插件中的一个规则的时候，你必须使用 插件名/规则ID 的形式</li><li><code>&quot;rules&quot;: {&quot;plugin1/rule1&quot;: &quot;error&quot;}</code></li><li>规则 <code>plugin1/rule1</code> 表示来自插件 <code>plugin1</code> 的 <code>rule1</code> 规则</li><li>当指定来自插件的规则时，确保删除 <code>eslint-plugin-</code> 前缀。<code>ESLint</code> 在内部只使用没有前缀的名称去定位规则</li></ul><h3 id="异常等级配置" tabindex="-1"><a href="https://cn.eslint.org/docs/user-guide/configuring#configuring-rules" target="_blank" rel="noreferrer">异常等级配置</a> <a class="header-anchor" href="#异常等级配置" aria-label="Permalink to &quot;[异常等级配置](https://cn.eslint.org/docs/user-guide/configuring#configuring-rules)&quot;">​</a></h3><ul><li>&quot;<code>off</code>&quot; 或 0 - 关闭规则</li><li>&quot;<code>warn</code>&quot; 或 1 - 开启规则，使用警告级别的错误：<code>warn</code> (不会导致程序退出)</li><li>&quot;<code>error</code>&quot; 或 2 - 开启规则，使用错误级别的错误：<code>error</code> (当被触发的时候，程序会退出)</li></ul><h3 id="extend-规则继承" tabindex="-1"><a href="https://cn.eslint.org/docs/user-guide/configuring#using-the-configuration-from-a-plugin" target="_blank" rel="noreferrer">extend 规则继承</a> <a class="header-anchor" href="#extend-规则继承" aria-label="Permalink to &quot;[extend 规则继承](https://cn.eslint.org/docs/user-guide/configuring#using-the-configuration-from-a-plugin)&quot;">​</a></h3><ul><li><code>plugins</code> 属性值 可以省略包名的前缀 <code>eslint-plugin-</code>。</li><li><code>extends</code> 属性值可以由以下组成：</li><li>· <code>plugin:</code></li><li>· 包名 (省略了前缀，比如，react)</li><li>· /</li><li>· 配置名称 (比如 <code>recommended</code>)</li></ul><h3 id="eslintrc-js-配置规则文件" tabindex="-1">.eslintrc.js 配置规则文件 <a class="header-anchor" href="#eslintrc-js-配置规则文件" aria-label="Permalink to &quot;.eslintrc.js 配置规则文件&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 需要安装依赖:  npm i eslint-define-config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;eslint-define-config&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    root: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 指定如何解析语法。*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parser: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vue-eslint-parser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 优先级低于parse的语法解析配置 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parserOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        parser: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@typescript-eslint/parser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // https://eslint.bootcss.com/docs/user-guide/configuring#specifying-globals</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    globals: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Nullable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    extends: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // add more generic rulesets here, such as:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // &#39;eslint:recommended&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // &#39;plugin:vue/vue3-recommended&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // &#39;plugin:vue/recommended&#39; // Use this if you are using Vue.js 2.x.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;plugin:vue/vue3-recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 此条内容开启会导致 全局定义的 ts 类型报  no-undef 错误，因为</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // https://cn.eslint.org/docs/rules/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;eslint:recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;plugin:@typescript-eslint/recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// typescript-eslint推荐规则,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;prettier&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;plugin:prettier/recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rules: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // &#39;no-undef&#39;: &#39;off&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 禁止使用 var</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;no-var&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        semi: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 优先使用 interface 而不是 type</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@typescript-eslint/consistent-type-definitions&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;interface&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@typescript-eslint/no-explicit-any&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@typescript-eslint/explicit-module-boundary-types&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@typescript-eslint/ban-types&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;@typescript-eslint/no-unused-vars&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;vue/html-indent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                attribute: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                baseIndent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                closeBracket: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                alignAttributesVertically: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ignores: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 关闭此规则 使用 prettier 的格式化规则， 感觉prettier 更加合理，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 而且一起使用会有冲突</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;vue/max-attributes-per-line&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 强制使用驼峰命名</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;vue/component-name-in-template-casing&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;PascalCase&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                registeredComponentsOnly: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ignores: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="eslintignore-配置-eslint-忽略文件" tabindex="-1">.eslintignore 配置 eslint 忽略文件 <a class="header-anchor" href="#eslintignore-配置-eslint-忽略文件" aria-label="Permalink to &quot;.eslintignore 配置 eslint 忽略文件&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>*.sh</span></span>
<span class="line"><span>node_modules</span></span>
<span class="line"><span>*.md</span></span>
<span class="line"><span>*.woff</span></span>
<span class="line"><span>*.ttf</span></span>
<span class="line"><span>.vscode</span></span>
<span class="line"><span>.idea</span></span>
<span class="line"><span>dist</span></span>
<span class="line"><span>/public</span></span>
<span class="line"><span>/docs</span></span>
<span class="line"><span>.husky</span></span>
<span class="line"><span>.local</span></span>
<span class="line"><span>/bin</span></span>
<span class="line"><span>.eslintrc.js</span></span>
<span class="line"><span>prettier.config.js</span></span>
<span class="line"><span>/src/mock/*</span></span></code></pre></div><h2 id="安装-prettier-依赖" tabindex="-1">安装 prettier 依赖 <a class="header-anchor" href="#安装-prettier-依赖" aria-label="Permalink to &quot;安装 prettier 依赖&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm i prettier eslint-config-prettier eslint-plugin-prettier -D</span></span></code></pre></div><h3 id="prettierrc-js-配置规则文件" tabindex="-1">.prettierrc.js 配置规则文件 <a class="header-anchor" href="#prettierrc-js-配置规则文件" aria-label="Permalink to &quot;.prettierrc.js 配置规则文件&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 一行最多 100 字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    printWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 使用 4 个空格缩进</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tabWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 不使用缩进符，而使用空格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useTabs: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 行尾不需要有分号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    semi: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 使用单引号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    singleQuote: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 对象的 key 仅在必要时用引号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    quoteProps: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;as-needed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // jsx 不使用单引号，而使用双引号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsxSingleQuote: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 尾随逗号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    trailingComma: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 大括号内的首尾需要空格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bracketSpacing: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // jsx 标签的反尖括号需要换行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsxBracketSameLine: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 箭头函数，只有一个参数的时候，也需要括号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    arrowParens: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;always&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 每个文件格式化的范围是文件的全部内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rangeStart: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rangeEnd: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Infinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 不需要写文件开头的 @prettier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    requirePragma: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 不需要自动在文件开头插入 @prettier</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    insertPragma: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 使用默认的折行标准</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    proseWrap: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preserve&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据显示样式决定 html 要不要折行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    htmlWhitespaceSensitivity: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 换行符使用 lf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    endOfLine: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;lf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="prettierignore-配置-prettier-忽略文件" tabindex="-1">.prettierignore 配置 prettier 忽略文件 <a class="header-anchor" href="#prettierignore-配置-prettier-忽略文件" aria-label="Permalink to &quot;.prettierignore 配置 prettier 忽略文件&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/dist/*</span></span>
<span class="line"><span>.local</span></span>
<span class="line"><span>.output.js</span></span>
<span class="line"><span>/node_modules/**</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**/*.svg</span></span>
<span class="line"><span>**/*.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/public/*</span></span></code></pre></div><h2 id="关于-esint-prettier-在-webstorm-中的配置" tabindex="-1">关于 esint + prettier 在 webstorm 中的配置 <a class="header-anchor" href="#关于-esint-prettier-在-webstorm-中的配置" aria-label="Permalink to &quot;关于 esint + prettier 在 webstorm 中的配置&quot;">​</a></h2><ol><li><p><code>File | Settings | Languages &amp; Frameworks | JavaScript | Code Quality Tools | ESLint</code> 中设置 <code>Automatic ESLint configuration</code> 再设置 <code>Run eslint --fix on save</code></p></li><li><p><code>File | Settings | Languages &amp; Frameworks | JavaScript | Prettier</code> 中设置 <code>Run for files</code> 为 <code>{**/*,*}.{js,ts,jsx,tsx,vue}</code> 其中 <code>On code reformat</code> 和 <code>On save</code> 不需要勾选，否则会和eslint 有冲突 （可能配置有点问题）</p></li><li><p>在 <code>webstorm</code> 若使用 <code>ctrl + alt + L</code> 进行格式化代码， 很可能会导致 <code>eslint</code> 检查不通过，不需要在意，只使用 <code>eslint</code> 的代码格式化就好了</p></li></ol>`,32),t=[l];function p(h,r,k,d,o,c){return a(),i("div",null,t)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
