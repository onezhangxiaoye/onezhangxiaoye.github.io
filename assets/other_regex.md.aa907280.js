import{_ as s,o as t,c as l,a}from"./app.b90595f9.js";const C=JSON.parse('{"title":"正则表达式速查","description":"","frontmatter":{},"headers":[{"level":2,"title":"速查表","slug":"速查表","link":"#速查表","children":[]},{"level":2,"title":"贪婪于惰性模式","slug":"贪婪于惰性模式","link":"#贪婪于惰性模式","children":[]},{"level":2,"title":"数字的千位分隔符","slug":"数字的千位分隔符","link":"#数字的千位分隔符","children":[]},{"level":2,"title":"字符串中数字都加1","slug":"字符串中数字都加1","link":"#字符串中数字都加1","children":[]},{"level":2,"title":"匹配16进制颜色","slug":"匹配16进制颜色","link":"#匹配16进制颜色","children":[]},{"level":2,"title":"匹配16进制颜色 如: #ffF #000000","slug":"匹配16进制颜色-如-fff-000000","link":"#匹配16进制颜色-如-fff-000000","children":[]},{"level":2,"title":"匹配日期+时间","slug":"匹配日期-时间","link":"#匹配日期-时间","children":[]},{"level":2,"title":"验证密码 (长度 6-12 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符)","slug":"验证密码-长度-6-12-位-由数字、小写字符和大写字母组成-但必须至少包括-2-种字符","link":"#验证密码-长度-6-12-位-由数字、小写字符和大写字母组成-但必须至少包括-2-种字符","children":[]}],"relativePath":"other/regex.md","lastUpdated":1716447218000}'),n={name:"other/regex.md"},e=a(`<h1 id="正则表达式速查" tabindex="-1">正则表达式速查 <a class="header-anchor" href="#正则表达式速查" aria-hidden="true">#</a></h1><ul><li>参考：<a href="https://juejin.cn/post/6844903845227659271#heading-16" target="_blank" rel="noreferrer">掘金-正则表达式不要背</a></li><li>参考：<a href="https://juejin.cn/post/6844903487155732494" target="_blank" rel="noreferrer">掘金-JS正则表达式完整教程</a></li><li>工具： <a href="https://regexper.com/" target="_blank" rel="noreferrer">https://regexper.com/</a></li></ul><h2 id="速查表" tabindex="-1">速查表 <a class="header-anchor" href="#速查表" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">正则表达式</th><th style="text-align:left;">解释</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">\\t\\v\\n\\r\\f</td><td style="text-align:left;">匹配水平制表符、垂直制表符、换行符、回车符、换页符</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">.</td><td style="text-align:left;">除换行符之外的字符</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">\\d</td><td style="text-align:left;">单个数字, [0-9]</td><td style="text-align:left;">&#39;菜ad1ad3&#39;.replace(/\\d/g, &#39;&#39;) <br> 输出：菜adad</td></tr><tr><td style="text-align:left;">\\D</td><td style="text-align:left;">匹配非数字，等价于 [^0-9]</td><td style="text-align:left;">&#39;菜ad1ad3&#39;.replace(/\\D/g, &#39;&#39;) <br> 输出：13</td></tr><tr><td style="text-align:left;">\\w</td><td style="text-align:left;">匹配单词字符，等价于 [a-zA-Z0-9_]</td><td style="text-align:left;">&#39;菜ad1a_d3&#39;.replace(/\\w/g, &#39;&#39;) <br> 输出：菜</td></tr><tr><td style="text-align:left;">\\W</td><td style="text-align:left;">匹配非单词字符，等价于 [^a-zA-Z0-9_]</td><td style="text-align:left;">&#39;菜ad1a_d3&#39;.replace(/\\W/g, &#39;&#39;) <br> 输出：ad1a_d3</td></tr><tr><td style="text-align:left;">\\s</td><td style="text-align:left;">匹配空白符，等价于 [ \\t\\v\\n\\r\\f]</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">\\S</td><td style="text-align:left;">匹配非空白符，等价于 [^ \\t\\v\\n\\r\\f]</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td></tr><tr><td style="text-align:left;">[abc]</td><td style="text-align:left;">匹配 &quot;a&quot;、&quot;b&quot;、&quot;c&quot; 其中任何一个字符</td><td style="text-align:left;">&#39;菜ad1a_d3&#39;.replace(/[ad]/g, &#39;&#39;) <br> 输出：菜1_3</td></tr><tr><td style="text-align:left;">[^abc]</td><td style="text-align:left;">匹配除了 &quot;a&quot;、&quot;b&quot;、&quot;c&quot; 之外的任何一个字符</td><td style="text-align:left;">&#39;菜ad1a_d3&#39;.replace(/[^ad]/g, &#39;&#39;) <br> 输出：adad</td></tr><tr><td style="text-align:left;">[a-c1-3]</td><td style="text-align:left;">匹配 &quot;a&quot;、&quot;b&quot;、&quot;c&quot;、&quot;1&quot;、&quot;2&quot;、&quot;3&quot; 其中任何一个字符</td><td style="text-align:left;">&#39;菜ad1a_d3&#39;.replace(/[a-c1-3]/g, &#39;&#39;) <br> 输出：菜d_d</td></tr><tr><td style="text-align:left;">?</td><td style="text-align:left;">等价于{0,1} 贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d?/, &#39;&#39;) <br> 输出： 23456</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">等价于{0,} 贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d*/, &#39;&#39;) <br> 输出： 输出空字符串</td></tr><tr><td style="text-align:left;">+</td><td style="text-align:left;">等价于{1,} 贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d+/, &#39;&#39;) <br> 输出： 输出空字符串</td></tr><tr><td style="text-align:left;">{n,m}</td><td style="text-align:left;">连续出现 n 到 m 次，贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d{2,5}/, &#39;&#39;) <br> 输出： 6</td></tr><tr><td style="text-align:left;">{n,}</td><td style="text-align:left;">至少连续出现 n 次，贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d{2,}/, &#39;&#39;) <br> 输出： 输出空字符串</td></tr><tr><td style="text-align:left;">{n}</td><td style="text-align:left;">连续出现 n 次，贪婪模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d{2}/, &#39;&#39;) <br> 输出： 3456</td></tr><tr><td style="text-align:left;">{n,m}?</td><td style="text-align:left;">连续出现 n 到 m 次，惰性模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d{2,5}?/, &#39;&#39;) <br> 输出： 3456</td></tr><tr><td style="text-align:left;">??</td><td style="text-align:left;">等价于{0,1}? 惰性模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d??/, &#39;&#39;) <br> 输出： 123456</td></tr><tr><td style="text-align:left;">+?</td><td style="text-align:left;">等价于{1,}? 惰性模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d+?/, &#39;&#39;) <br> 输出： 23456</td></tr><tr><td style="text-align:left;">*?</td><td style="text-align:left;">等价于{0,}? 惰性模式</td><td style="text-align:left;">&#39;123456&#39;.replace(/\\d*?/, &#39;&#39;) <br> 输出： 123456</td></tr><tr><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td></tr><tr><td style="text-align:left;">\\b</td><td style="text-align:left;">单词边界</td><td style="text-align:left;">&#39;java script&#39;.replace(/\\b/g, &#39;-&#39;) <br> 输出： -java- -script-</td></tr><tr><td style="text-align:left;">\\B</td><td style="text-align:left;">非单词边界</td><td style="text-align:left;">&#39;java script&#39;.replace(/\\B/g, &#39;-&#39;) <br> 输出： j-a-v-a s-c-r-i-p-t</td></tr><tr><td style="text-align:left;">^</td><td style="text-align:left;">字符串开头</td><td style="text-align:left;">&#39;java script&#39;.replace(/^/g, &#39;-&#39;) <br> 输出： -java script</td></tr><tr><td style="text-align:left;">$</td><td style="text-align:left;">字符串结尾</td><td style="text-align:left;">&#39;java script&#39;.replace(/$/g, &#39;-&#39;) <br> 输出： java script-</td></tr><tr><td style="text-align:left;">m 标志</td><td style="text-align:left;">多行匹配，把 ^ 和 $ 变成行开头和行结尾</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">i 标志</td><td style="text-align:left;">匹配过程中，忽略英文字母大小写</td><td style="text-align:left;">&#39;aaaAAA&#39;.replace(/a/ig, &#39;&#39;) <br> 输出： 输出空字符串</td></tr><tr><td style="text-align:left;">g 标志</td><td style="text-align:left;">全局匹配，找到所有满足匹配的子串</td><td style="text-align:left;">&#39;aaaAAA&#39;.replace(/a/g, &#39;&#39;) <br> 输出： AAA</td></tr><tr><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td></tr><tr><td style="text-align:left;">\\0,\\1,\\2</td><td style="text-align:left;">分组引用</td><td style="text-align:left;">统计重复次数大于2的字母数量 <br> &#39;aaaabbbcddde&#39;.match(/([a-z])\\1+/g).length <br> 输出：3</td></tr><tr><td style="text-align:left;">(?:)</td><td style="text-align:left;">非捕获组</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">(?=abc)</td><td style="text-align:left;">匹配 &quot;abc&quot; 前面的位置</td><td style="text-align:left;">&#39;12342672&#39;.replace(/(?=2)/g, &#39;-&#39;) <br> 输出： 1-234-267-2</td></tr><tr><td style="text-align:left;">(?!abc)</td><td style="text-align:left;">匹配非 &quot;abc&quot; 前面的位置</td><td style="text-align:left;">&#39;12342672&#39;.replace(/(?!2)/g, &#39;-&#39;) <br> 输出： -12-3-42-6-72-</td></tr><tr><td style="text-align:left;">(?&lt;=abc)</td><td style="text-align:left;">匹配 &quot;abc&quot; 后面的位置</td><td style="text-align:left;">&#39;12342672&#39;.replace(/(?&lt;=2)/g, &#39;-&#39;) <br> 输出： 12-342-672-</td></tr><tr><td style="text-align:left;">(?&lt;!abc)</td><td style="text-align:left;">匹配非 &quot;abc&quot; 后面的位置</td><td style="text-align:left;">&#39;12342672&#39;.replace(/(?&lt;!2)/g, &#39;-&#39;) <br> 输出： -1-23-4-26-7-2</td></tr><tr><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td><td style="text-align:left;">--------</td></tr><tr><td style="text-align:left;">[^regex]</td><td style="text-align:left;">非</td><td style="text-align:left;">&#39;abcde&#39;.replace(/[^ab]/g, &#39;&#39;) <br> 输出： ab</td></tr><tr><td style="text-align:left;">\\</td><td style="text-align:left;"></td><td style="text-align:left;">或</td></tr></tbody></table><h2 id="贪婪于惰性模式" tabindex="-1">贪婪于惰性模式 <a class="header-anchor" href="#贪婪于惰性模式" aria-hidden="true">#</a></h2><blockquote><p>贪婪模式会尽可能多的匹配，惰性模式会尽可能少的匹配</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 贪婪模式</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123 1234 12345 123456</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2,5}/</span><span style="color:#F78C6C;">g</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 [ &#39;123&#39;, &#39;1234&#39;, &#39;12345&#39;, &#39;12345&#39; ]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 惰性模式</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123 1234 12345 123456</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2,5}?/</span><span style="color:#F78C6C;">g</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 [&#39;12&#39;, &#39;12&#39;, &#39;34&#39;, &#39;12&#39;, &#39;34&#39;, &#39;12&#39;, &#39;34&#39;, &#39;56&#39;]</span></span>
<span class="line"></span></code></pre></div><h2 id="数字的千位分隔符" tabindex="-1">数字的千位分隔符 <a class="header-anchor" href="#数字的千位分隔符" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1234567890</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">)(?=((</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">))/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 1,234,567,890</span></span>
<span class="line"></span></code></pre></div><h2 id="字符串中数字都加1" tabindex="-1">字符串中数字都加1 <a class="header-anchor" href="#字符串中数字都加1" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12c345a678nn0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">match</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 23c456a789nn1</span></span>
<span class="line"></span></code></pre></div><h2 id="匹配16进制颜色" tabindex="-1">匹配16进制颜色 <a class="header-anchor" href="#匹配16进制颜色" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#ffffff #Fc01DF #FfF #fffa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">([</span><span style="color:#C3E88D;">a-z0-9</span><span style="color:#89DDFF;">]){6}|([</span><span style="color:#C3E88D;">a-z0-9</span><span style="color:#89DDFF;">]){3}/</span><span style="color:#F78C6C;">gi</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 [ &#39;#ffffff&#39;, &#39;#Fc01DF&#39;, &#39;FfF&#39;, &#39;fff&#39; ]</span></span>
<span class="line"></span></code></pre></div><h2 id="匹配16进制颜色-如-fff-000000" tabindex="-1">匹配16进制颜色 如: #ffF #000000 <a class="header-anchor" href="#匹配16进制颜色-如-fff-000000" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#ffffff #Fc01DF #FfF #fff</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">([</span><span style="color:#C3E88D;">0-9a-z</span><span style="color:#89DDFF;">])(</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">{5}|</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">{2})/</span><span style="color:#F78C6C;">gi</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 [ &#39;#ffffff&#39;, &#39;#FfF&#39;, &#39;#fff&#39; ]</span></span>
<span class="line"></span></code></pre></div><h2 id="匹配日期-时间" tabindex="-1">匹配日期+时间 <a class="header-anchor" href="#匹配日期-时间" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">2\\d</span><span style="color:#89DDFF;">{3}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">])|(</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-2</span><span style="color:#89DDFF;">]))</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">])|([</span><span style="color:#C3E88D;">1-2</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">)|(</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-1</span><span style="color:#89DDFF;">]))</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">])|(</span><span style="color:#C3E88D;">1\\d</span><span style="color:#89DDFF;">)|(</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-4</span><span style="color:#89DDFF;">]))</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">60</span><span style="color:#89DDFF;">)|(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">])|([</span><span style="color:#C3E88D;">1-5</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">))</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">((</span><span style="color:#C3E88D;">60</span><span style="color:#89DDFF;">)|(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">])|([</span><span style="color:#C3E88D;">1-5</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">))/</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2021-02-31 01:60:02</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出 true</span></span>
<span class="line"></span></code></pre></div><h2 id="验证密码-长度-6-12-位-由数字、小写字符和大写字母组成-但必须至少包括-2-种字符" tabindex="-1">验证密码 (长度 6-12 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符) <a class="header-anchor" href="#验证密码-长度-6-12-位-由数字、小写字符和大写字母组成-但必须至少包括-2-种字符" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/(((?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">)(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">]))|(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">)(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">A-Z</span><span style="color:#89DDFF;">])|(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">A-Z</span><span style="color:#89DDFF;">])(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">]))</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">\\dA-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">AA13SFaas121</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123asfd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123asfASFDAd121233</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">asdASFASDAS</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123ASFA</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1Aasd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))  </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div>`,19),p=[e];function o(r,c,y,D,d,i){return t(),l("div",null,p)}const A=s(n,[["render",o]]);export{C as __pageData,A as default};
