import{_ as e,o as l,c as s,a}from"./app.b90595f9.js";const h=JSON.parse('{"title":"CSS-Flex-弹性布局","description":"","frontmatter":{},"headers":[{"level":2,"title":"容器的属性","slug":"容器的属性","link":"#容器的属性","children":[{"level":3,"title":"flex-direction","slug":"flex-direction","link":"#flex-direction","children":[]},{"level":3,"title":"flex-wrap","slug":"flex-wrap","link":"#flex-wrap","children":[]},{"level":3,"title":"flex-flow","slug":"flex-flow","link":"#flex-flow","children":[]},{"level":3,"title":"justify-content","slug":"justify-content","link":"#justify-content","children":[]},{"level":3,"title":"align-items","slug":"align-items","link":"#align-items","children":[]},{"level":3,"title":"align-content","slug":"align-content","link":"#align-content","children":[]}]},{"level":2,"title":"项目属性","slug":"项目属性","link":"#项目属性","children":[{"level":3,"title":"order","slug":"order","link":"#order","children":[]},{"level":3,"title":"align-self","slug":"align-self","link":"#align-self","children":[]},{"level":3,"title":"flex-grow flex-shrink flex-basis ; flex","slug":"flex-grow-flex-shrink-flex-basis-flex","link":"#flex-grow-flex-shrink-flex-basis-flex","children":[{"level":4,"title":"经典的左侧宽度不定或者确定，右侧宽度自适应填满","slug":"经典的左侧宽度不定或者确定-右侧宽度自适应填满","link":"#经典的左侧宽度不定或者确定-右侧宽度自适应填满","children":[]}]}]}],"relativePath":"css/css-flex.md","lastUpdated":1716447218000}'),n={name:"css/css-flex.md"},o=a(`<h1 id="css-flex-弹性布局" tabindex="-1">CSS-Flex-弹性布局 <a class="header-anchor" href="#css-flex-弹性布局" aria-hidden="true">#</a></h1><p>参照：<a href="https://www.runoob.com/w3cnote/flex-grammar.html" target="_blank" rel="noreferrer">Flex 布局语法教程</a></p><h2 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-hidden="true">#</a></h2><h3 id="flex-direction" tabindex="-1">flex-direction <a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a></h3><blockquote><p>决定主轴的方向（即项目的排列方向）</p></blockquote><ul><li><code>row（默认值）</code>：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul><h3 id="flex-wrap" tabindex="-1">flex-wrap <a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a></h3><blockquote><p>定义如果一条轴线排不下，如何换行</p></blockquote><ul><li><code>nowrap（默认）</code>：不换行。</li><li><code>wrap</code>：换行，第一行在上方。</li><li><code>wrap-reverse</code>：换行，第一行在下方。</li></ul><h3 id="flex-flow" tabindex="-1">flex-flow <a class="header-anchor" href="#flex-flow" aria-hidden="true">#</a></h3><blockquote><p><code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式，默认值为 <code>row</code> <code>nowrap</code>。</p></blockquote><h3 id="justify-content" tabindex="-1">justify-content <a class="header-anchor" href="#justify-content" aria-hidden="true">#</a></h3><blockquote><p>定义了项目在主轴上的对齐方式</p></blockquote><ul><li><code>flex-start（默认值）</code>：左对齐。</li><li><code>flex-end</code>：右对齐。</li><li><code>center</code>： 居中。</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h3 id="align-items" tabindex="-1">align-items <a class="header-anchor" href="#align-items" aria-hidden="true">#</a></h3><blockquote><p>定义项目在交叉轴上如何对齐</p></blockquote><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch（默认值）</code>：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h3 id="align-content" tabindex="-1">align-content <a class="header-anchor" href="#align-content" aria-hidden="true">#</a></h3><blockquote><p>定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p></blockquote><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch（默认值）</code>：轴线占满整个交叉轴。</li></ul><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-hidden="true">#</a></h2><h3 id="order" tabindex="-1">order <a class="header-anchor" href="#order" aria-hidden="true">#</a></h3><blockquote><p>定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p></blockquote><h3 id="align-self" tabindex="-1">align-self <a class="header-anchor" href="#align-self" aria-hidden="true">#</a></h3><blockquote><p><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 <code>align-items</code> 属性。默认值为 <code>auto</code>；<br> 属性值： <code>auto | flex-start | flex-end | center | baseline | stretch</code> ，意思同 <code>align-content</code></p></blockquote><h3 id="flex-grow-flex-shrink-flex-basis-flex" tabindex="-1">flex-grow flex-shrink flex-basis ; flex <a class="header-anchor" href="#flex-grow-flex-shrink-flex-basis-flex" aria-hidden="true">#</a></h3><p><code>flex-grow</code> ：属性定义项目的放大比例，默认为 <code>0</code>，即如果存在剩余空间，也不放大 <br><code>flex-shrink</code> ：属性定义了项目的缩小比例，默认为 <code>1</code>，即如果空间不足，该项目将缩小。<br><code>flex-basis</code> ：属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 <code>auto</code>，即项目的本来大小。</p><blockquote><p><code>flex</code> 属性是 <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写，默认值为 <code>0 1 auto</code>。后两个属性可选。</p></blockquote><h4 id="经典的左侧宽度不定或者确定-右侧宽度自适应填满" tabindex="-1">经典的左侧宽度不定或者确定，右侧宽度自适应填满 <a class="header-anchor" href="#经典的左侧宽度不定或者确定-右侧宽度自适应填满" aria-hidden="true">#</a></h4><div class="css-flex-demo-box"><div class="css-flex-demo-box-item-1">左侧宽度不定或者确定，右侧宽度自适应填满</div><div class="css-flex-demo-box-item"></div></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">css-flex-demo-box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">css-flex-demo-box-item-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">经典的左侧宽度不定或者确定，右侧宽度自适应填满</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">css-flex-demo-box-item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">css-flex-demo-box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">outline</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2px</span><span style="color:#A6ACCD;"> dashed</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">css-flex-demo-box-item-1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">css-flex-demo-box-item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,31),c=[o];function t(p,r,i,d,D,f){return l(),s("div",null,c)}const x=e(n,[["render",t]]);export{h as __pageData,x as default};
