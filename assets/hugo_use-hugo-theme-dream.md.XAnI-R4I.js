import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.DSzkhk7e.js";const u=JSON.parse('{"title":"使用hugo Theme Dream主题","description":"","frontmatter":{"title":"使用hugo Theme Dream主题","date":"2021-01-16T09:06:32.000Z","lastmod":"2021-01-21T01:10:07.000Z","author":"ZhangXiaoYe","avatar":"/images/avatar.png","authorlink":"http://cai12317.gitee.io/blog","categories":["Hugo"],"tags":["教程","Hugo"]},"headers":[],"relativePath":"hugo/use-hugo-theme-dream.md","filePath":"hugo/use-hugo-theme-dream.md","lastUpdated":1716447218000}'),n={name:"hugo/use-hugo-theme-dream.md"},t=e(`<h1 id="使用hugo-theme-dream主题" tabindex="-1">使用hugo Theme Dream主题 <a class="header-anchor" href="#使用hugo-theme-dream主题" aria-label="Permalink to &quot;使用hugo Theme Dream主题&quot;">​</a></h1><p>Hugo的安装那些基本使用很多博客都已经写过了，也算是比较容易入门的,由于没有太多的时间去查阅官方文档，所以就直接在<a href="https://themes.gohugo.io/" target="_blank" rel="noreferrer">HugoThemes</a>,找了一个自己比较喜欢的<a href="https://github.com/g1eny0ung/hugo-theme-dream" target="_blank" rel="noreferrer">hugo-theme-dream</a>主题，然后开始了踩坑之旅。</p><h2 id="_1-hugo在win10下的安装" tabindex="-1">1 Hugo在win10下的安装 <a class="header-anchor" href="#_1-hugo在win10下的安装" aria-label="Permalink to &quot;1 Hugo在win10下的安装&quot;">​</a></h2><p>前面那部分参照了<a href="https://www.gohugo.org/" target="_blank" rel="noreferrer">Hugo中文</a>,自己安装的是二进制文件，在配置环境变量时一直不生效，后面重启了一下就好了，😓😓😓</p><h2 id="_2-初始代码的提交" tabindex="-1">2 初始代码的提交 <a class="header-anchor" href="#_2-初始代码的提交" aria-label="Permalink to &quot;2 初始代码的提交&quot;">​</a></h2><p>自己的博客是使用的<a href="https://gitee.com" target="_blank" rel="noreferrer">码云</a>的仓库，为了在国内能够快一点。在提交代码时候，<code>/themes/hugo-theme-dream</code> 里面的文件一直无法提交，虽然本地<code>Hugo</code>能启动起来，可是在<code>码云</code>构建完了项目打开满屏错误代码，后面删除了<code>/themes/hugo-theme-dream/.github</code>和<code>/themes/hugo-theme-dream/.git</code>，才把主题代码提交上去</p><h2 id="_3-后续改动中遇到的一些问题" tabindex="-1">3 后续改动中遇到的一些问题 <a class="header-anchor" href="#_3-后续改动中遇到的一些问题" aria-label="Permalink to &quot;3 后续改动中遇到的一些问题&quot;">​</a></h2><p>在参照<code>exampleSite</code> 进行项目的内容添加过程中，由于自己的博客地址是<code>http://cai12317.gitee.io/blog</code>,这里就出现了很多图片无法正常显示，在浏览器中检查源码后发现图片的地址<code>http://localhost:1313/images/banner.webp</code>有问题，这里少了一截地址，应该是<code>http://localhost:1313/blog/images/banner.webp</code>才能正确显示。这里主要是先在主题目录找到图片对于的<code>.html</code>文件（可以使用class去全局搜索），在这里的模板语法获取的图片路径直接就是使用的原路径（整了半天不知道怎么改不知道怎么改😂），想着如果在配置里面加一个<code>/blog</code>，以后我换了<code>baseURL</code>，那不是还要去改一次。然后去检查了能够显示的图片的源码怎么写的。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 无法显示的写法 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ .Site.Params.favicon }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shortcut icon&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/x-icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 能够显示的写法 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ if isset .Site.Params &quot;favicon&quot; }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ .Site.Params.favicon | relURL }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shortcut icon&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/x-icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ end }}</span></span></code></pre></div><p>虽然看不懂，但是参照这样写就对了，<code>relURL</code>在Hugo的模板语法中有很多的函数。</p><p>可以详细阅读<a href="https://gohugo.io/functions/" target="_blank" rel="noreferrer">Hugo-Function</a></p><p>或者参照这个，视乎不全<a href="https://hugo.aiaide.com/" target="_blank" rel="noreferrer">Hugo中文帮助文档</a></p><p>其他的如果图片地址还有问题，应该都可以参照这种解决方式。</p><h2 id="_4-归档标签无法正常显示" tabindex="-1">4 归档标签无法正常显示 <a class="header-anchor" href="#_4-归档标签无法正常显示" aria-label="Permalink to &quot;4 归档标签无法正常显示&quot;">​</a></h2><p>类似下面把博客文章相关的文件统一都放到<code>posts</code> <code>posts</code> <code>posts</code>,下面就好了，我少写了一个<code>s</code>搞了搞了好久 <img src="https://imgkr2.cn-bj.ufileos.com/cfe3ce71-e948-491c-8866-98f30de5ec46.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&amp;Signature=9HVOgUBx35Us8FN0drkj%252Fkc88Is%253D&amp;Expires=1610874199" alt=""></p><h2 id="_5-在gitee上发布之后不显示文章" tabindex="-1">5 在Gitee上发布之后不显示文章 <a class="header-anchor" href="#_5-在gitee上发布之后不显示文章" aria-label="Permalink to &quot;5 在Gitee上发布之后不显示文章&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>---</span></span>
<span class="line"><span>title: &quot;Twice&quot;</span></span>
<span class="line"><span>date: 2021-01-15T00:03:05+08:00</span></span>
<span class="line"><span># 这里表示当前文章还属于草稿，在生产环境中不会显示</span></span>
<span class="line"><span>draft: true</span></span>
<span class="line"><span>---</span></span></code></pre></div><p>参照<a href="https://gohugo.io/getting-started/usage/#draft-future-and-expired-content" target="_blank" rel="noreferrer">Hugo文档-Basic Usage</a></p><h2 id="_6-块引用" tabindex="-1">6 块引用 <a class="header-anchor" href="#_6-块引用" aria-label="Permalink to &quot;6 块引用&quot;">​</a></h2><p><code>blockquote</code> 块引用，默认没有样式，可以直接去自定义 css 添加一个预期的样式就可以了，样式参照的掘金的样式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.markdown-body</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> blockquote</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#666</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #cbcbcb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f8f8f8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.markdown-body</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> blockquote</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_7-代码高亮" tabindex="-1">7 代码高亮 <a class="header-anchor" href="#_7-代码高亮" aria-label="Permalink to &quot;7 代码高亮&quot;">​</a></h3><p>想通过<code>highlightjs</code>调整到自己想要的代码主题样式，但是怎么调整视乎都有点不对劲，后面检查元素发现是内联的样式覆盖了<code>highlightjs</code>的样式，</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  # highlightjs样式的设置</span></span>
<span class="line"><span>  highlightjs = true</span></span>
<span class="line"><span>  # highlightjsCDN = &quot;https://cdn.jsdelivr.net/gh/highlightjs/cdn-release/build/highlight.min.js&quot;</span></span>
<span class="line"><span>  highlightjsExtraLanguages = [&quot;ocaml&quot;]</span></span>
<span class="line"><span>  highlightjsTheme = &quot;atom-one-dark&quot;</span></span>
<span class="line"><span>  highlightjsThemeDark = &quot;atom-one-dark&quot;</span></span></code></pre></div><p>这里通过<a href="https://gohugo.io/getting-started/configuration-markup#highlight" target="_blank" rel="noreferrer">Hugo-Highlight</a>，<code>codeFences = false</code> 关闭他本身的代码样式生成</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[markup]</span></span>
<span class="line"><span>  [markup.highlight]</span></span>
<span class="line"><span>    anchorLineNos = false</span></span>
<span class="line"><span>    codeFences = false # 是否使用 内置 代码样式</span></span>
<span class="line"><span>    guessSyntax = false # 猜测语法，如果你没有设置要显示的语言则会自动匹配</span></span>
<span class="line"><span>    hl_Lines = &quot;&quot; # 高亮的行号</span></span>
<span class="line"><span>    lineAnchors = &quot;&quot;</span></span>
<span class="line"><span>    lineNoStart = 1 # 行号从编号几开始</span></span>
<span class="line"><span>    lineNos = true # 是否显示行号</span></span>
<span class="line"><span>    lineNumbersInTable = true #使用表来格式化行号和代码,而不是 标签</span></span>
<span class="line"><span>    noClasses = false # 是否使用 class 标签</span></span>
<span class="line"><span>    style = &quot;dracula&quot;</span></span>
<span class="line"><span>    tabWidth = 4</span></span></code></pre></div>`,26),h=[t];function p(l,o,r,k,d,g){return i(),a("div",null,h)}const E=s(n,[["render",p]]);export{u as __pageData,E as default};
